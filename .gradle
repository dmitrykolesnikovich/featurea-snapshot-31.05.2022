ext {
    // versions
    kotlin_atomicfu_version=0.14.1
    kotlin_version=1.4.10
    kotlinx_html_version=0.7.3
    kotlinx_html_js_version=kotlinx_html_version
    kotlinx_coroutines_version=1.4.1
    jogamp_version=2.3.2
    lwjgl_version=2.9.3
    gdx_version=1.9.7
    ktor_version=1.4.2
    androidx_navigation_version=2.3.5
    logback_version=1.2.3
    kotlinx_serialization_version=1.0.0

    // gradle
    org.gradle.version=7.0
    org.gradle.caching=true
    org.gradle.daemon=true
    org.gradle.daemon.idletimeout=10800000
    org.gradle.jvmargs=-Xmx2560m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
    org.gradle.parallel=true

    // kotlin
    kotlin.code.style=official

    // android
    android.enableBuildCache=true
    android.enableJetifier=true
    android.useAndroidX=true

    // ios
    featurea.enableIosTarget=true
    kotlin.native.ignoreDisabledTargets=true

    // js
    featurea.enableJsTarget=true
    kotlin.incremental.js=true
    kotlin.js.compiler=legacy
}

String includePrefix = rootProject.name == "featurea" ? "" : "include/featurea/"
if (!new File(rootProject.projectDir, "build.gradle").exists()) {
    rootProject.buildFileName = "${includePrefix}gradle/featurea/build.gradle"
}

settings.ext.artifact = { String artifactId, Closure artifactPathClosure ->
    String groupId = artifactId.split(":")[0]
    String artifactPath = artifactPathClosure()

    String artifactAbsolutePath
    if (groupId == "featurea") {
        artifactAbsolutePath = "${includePrefix}${artifactPath}"
    } else {
        artifactAbsolutePath = artifactPath
    }

    File artifactDir = new File(rootProject.projectDir, artifactAbsolutePath)
    if (!artifactDir.exists()) throw new RuntimeException("Artifact not found: ${artifactDir.absolutePath}")

    def includeProject = { File buildFile, String specifier = null ->
        if (!buildFile.exists()) return

        File projectDir = buildFile.parentFile
        String projectPath = specifier != null ? ":$artifactId-$specifier" : ":$artifactId"
        include(projectPath)
        ProjectDescriptor project = project(projectPath)
        project.projectDir = projectDir
        project.buildFileName = buildFile.name
    }

    // build
    includeProject(new File(artifactDir, "build.gradle"))

    // examples
    File examplesDir = new File(artifactDir, "examples")
    if (examplesDir.exists()) {
        includeProject(new File(artifactDir, "build.gradle"), "examples")
    }

    // assemble
    if (!artifactPath.contains("assemble")) {
        String artifactName = new File(artifactPath).name
        String assemblePath = "${artifactPath}/assemble/${artifactName}-desktop"
        File assembleDir = new File(assemblePath)
        if (assembleDir.exists() || new File(rootProject.projectDir, assemblePath).exists()) {
            artifact("${artifactId}-desktop") { assemblePath }
        }
    }
}